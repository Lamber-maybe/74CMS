<?php

namespace app\apiadmin\controller\b2bcrm;

use app\common\controller\Backend;
use think\Db;

class Clue extends Backend
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }
    /*
     * 线索列表
     * */
    public function index()
    {
        $list_type = input('get.list_type/d', 0, 'intval');
        $key_type = input('get.key_type/d', 0, 'intval');
        $keyword = input('get.keyword/s', '', 'trim');
        $current_page = input('get.page/d', 1, 'intval');
        $pagesize = input('get.pagesize/d', 10, 'intval');
        $trade = input('get.trade/d', 0,'intval');
        $district = input('get.district/a',[]);
        $creat_id = input('get.creat_id/d',0,'intval');
        $admin_id = input('get.admin_id/d',0,'intval');
        $sort = input('get.sort/s', 'DESC', 'trim,strtoupper'); // 排序方式 asc dec
        $sort_type = input('get.sort_type/s', '', 'trim');

        // 排序规则【ASC|DESC】
        if (!in_array($sort, ['ASC', 'DESC'])) {
            $sort = 'DESC';
        }

        switch ($sort_type)
        {
            case 'collection_time':
                // 领取时间
                $order = 'a.collection_time ' .$sort;
                break;
            default:
                if ($list_type === 2)
                {
                    $order = 'a.collection_time DESC,a.updatetime DESC';
                }else
                {
                    $order = 'a.updatetime DESC';
                }
                break;
        }

        $where = ['is_customer'=>0];
        if ($key_type>0)
        {
            switch ($key_type)
            {
                case 1:// 搜索名称
                    $where['a.name'] = ['like', '%' . $keyword . '%'];
                    break;
                case 2: // 搜索手机号
                    $where['a.mobile'] = ['like', '%' . $keyword . '%'];
                    break;
            }
        }
        if ($trade > 0)
        {
            $where['a.trade'] = $trade;
        }
        if ($admin_id > 0)
        {
            $where['a.admin_id'] = $admin_id;
        }
        if (!empty($district) && is_array($district))
        {
            if (isset($district[0]) && !empty($district[0]))
            {
                $where['a.district1'] = $district[0];
            }
            if (isset($district[1]) && !empty($district[1]))
            {
                $where['a.district2'] = $district[1];
            }
            if (isset($district[2]) && !empty($district[2]))
            {
                $where['a.district3'] = $district[2];
            }
        }

        if ($creat_id > 0)
        {
            $where['a.creat_id'] = $creat_id;
        }
        switch ($list_type) {
            case 1: // 线索公海
                $where['a.admin_id'] = 0;
                break;
            case 2: // 我的线索
                $where['a.admin_id'] = $this->admininfo->id;
                break;
            default: // 全部线索
                break;
        }
        $field = 'a.id,a.`name`,a.admin_id,a.mobile,a.contacts,a.weixin,a.district1,a.district2,a.district3,a.district,a.address,a.updatetime,a.createtime,a.creat_id,a.last_visit_time,a.remark,a.trade,count(b.id) as follow_count,a.collection_time';

        $list = model('b2bcrm.CrmClue')->getList($where,$order,$current_page,$pagesize,$field);

        $category_data = model('Category')->getCache('QS_trade');
        $category_district_data = model('CategoryDistrict')->getCache();
        if (empty($list))
        {
            $this->ajaxReturn(200, '获取数据成功', []);
        }

        $adminlist = $this->adminlist();
        $cluelist = [];
        foreach($list['rows'] as $v)
        {
            $v['admin_username'] = isset($adminlist[$v['admin_id']]) ? $adminlist[$v['admin_id']] : '';
            $v['creat_username'] = isset($adminlist[$v['creat_id']]) ? $adminlist[$v['creat_id']] : '';
            $v['trade'] = isset($category_data[$v['trade']]) ? $category_data[$v['trade']] : '';
            $v['district1'] = isset($category_district_data[$v['district1']]) ? $category_district_data[$v['district1']] : '';
            $v['district2'] = isset($category_district_data[$v['district2']]) ? $category_district_data[$v['district2']] : '';
            $v['district3'] = isset($category_district_data[$v['district3']]) ? $category_district_data[$v['district3']] : '';
            $v['district'] = $v['district1'].$v['district2'].$v['district3'];
            if ($v['last_visit_time'] > 0)
            {
                $v['not_following_day'] = intval((time() - $v['last_visit_time'])/86400);
            }else
            {
                $v['not_following_day'] = '从未跟进';
            }

            // 领取时间
            $v['collection_time'] = !empty($v['collection_time']) ? date('Y-m-d H:i:s',$v['collection_time']) : '';

            unset($v['creat_id'],$v['last_visit_time']);
            $cluelist[] = $v;
        }
        $return['items'] = $cluelist;
        $return['total'] = $list['pages']['record_num'];
        $return['current_page'] = $current_page;
        $return['pagesize'] = $pagesize;
        $return['total_page'] = $list['pages']['total_page'];
        $this->ajaxReturn(200, '获取数据成功', $return);
    }

    /*
     * 线索详情
     * */
    public function details(){
        $clue_id = input('get.clue_id/d',0,'intval');
        if ($clue_id <= 0)
        {
            $this->ajaxReturn(500, '线索id错误', []);
        }
        $crm_clue = model('b2bcrm.CrmClue')->where('id',$clue_id)->find();
        if (!isset($crm_clue) || empty($crm_clue))
        {
            $this->ajaxReturn(500, '线索不存在', []);
        }

        $category_district_data = model('CategoryDistrict')->getCache();
        $adminlist = $this->adminlist();
        $crm_clue['admin_username'] = !empty($adminlist[$crm_clue['admin_id']]) ? $adminlist[$crm_clue['admin_id']] : '';
        $crm_clue['creat_username'] = !empty($adminlist[$crm_clue['creat_id']]) ? $adminlist[$crm_clue['creat_id']] : '';
        $district1 = !empty($category_district_data[$crm_clue['district1']]) ? $category_district_data[$crm_clue['district1']] : '';
        $district2 = !empty($category_district_data[$crm_clue['district2']]) ? $category_district_data[$crm_clue['district2']] : '';
        $district3 = !empty($category_district_data[$crm_clue['district3']]) ? $category_district_data[$crm_clue['district3']] : '';
        $crm_clue['district'] = $district1.$district2.$district3;
        $crm_clue['last_visit_time'] = !empty($crm_clue['last_visit_time']) ? date('Y-m-d H:i:s',$crm_clue['last_visit_time']) : '从未跟进';
        $crm_clue['visit_count'] = model('b2bcrm.CrmFollowUp')->where(['clue_id'=>$clue_id])->count();
        $crm_clue['scale'] = empty($crm_clue['scale']) ? null : $crm_clue['scale'];
        $crm_clue['trade'] = empty($crm_clue['trade']) ? null : $crm_clue['trade'];

        unset($crm_clue['uid'],$crm_clue['utype'],$crm_clue['admin_id'],$crm_clue['creat_id']);
        $this->ajaxReturn(200, '获取数据成功', $crm_clue);
    }

    /*
     * 释放(批量释放)
     * */
    public function release()
    {
        $clue_id = input('post.clue_id/a',[]);
        if (empty($clue_id))
        {
            $this->ajaxReturn(500, '请选择线索');
        }
        $clue_count = model('b2bcrm.CrmClue')->getDataNum(['id'=>['in',$clue_id]]);
        if ($clue_count == 0) {
            $this->ajaxReturn(500, '请选择正确的数据');
        }
        Db::startTrans();
        try {
            $update = model('b2bcrm.CrmClue')
                ->allowField(true)
                ->isUpdate(true)
                ->save(['admin_id' => 0], ['id' => ['in',$clue_id]]
                );
            if (false === $update) {
                throw new \Exception(model('b2bcrm.CrmClue')->getError());
            }
            $release = [];

            foreach($clue_id as $v)
            {
                $release[] = [
                    'clue_id'=>$v,
                    'create_time'=>time(),
                    'operation_type'=>2,
                    'operator'=>2,
                    'utype'=>0,
                    'admin_id'=>$this->admininfo->id,
                ];
            }
            model('b2bcrm.CrmClueRelease')
                ->isUpdate(false)
                ->saveAll($release);
            $clue_id = implode(',',$clue_id);
            // 日志
            $log_result = model('AdminLog')->record(
                '释放CRM所属销售【ID:' . $clue_id . '】',
                $this->admininfo
            );
            if (false === $log_result) {
                throw new \Exception(model('AdminLog')->getError());
            }

            // 提交事务
            Db::commit();
        } catch (\Exception $e) {
            // 回滚事务
            Db::rollBack();
            $this->ajaxReturn(500, $e->getMessage());
        }

        $this->ajaxReturn(200, '释放成功');
    }


    /*
     * 领取(批量领取)
     * */
    public function receive()
    {
        $clue_id = input('post.clue_id/a',[]);
        if (empty($clue_id))
        {
            $this->ajaxReturn(500, '请选择线索');
        }
        $clue_count = model('b2bcrm.CrmClue')->getDataNum(['id'=>['in',$clue_id]]);
        if ($clue_count == 0) {
            $this->ajaxReturn(500, '请选择线索');
        }
        try {

            $sys_configs = model('b2bcrm.CrmSysConfig')->getDateByCategory('thread');
            $sys_config = [];
            foreach($sys_configs as $v)
            {
                if ($v['is_open'] == 1)
                {
                    $sys_config[$v['key']] = $v['value'];
                }
            }
            if (isset($sys_config['thread_receive_limit'])) // 领取天数限制
            {
                if ($sys_config['thread_receive_limit'] == 0)
                {
                    $this->ajaxReturn(500, '当前不允许主动领取线索', []);
                }
                $where = [
                    'admin_id'=>$this->admininfo->id,
                    'operation_type' => 1,
                    'operator' => 1,
                    'utype' => 0
                ];
                $count = model('b2bcrm.CrmClueRelease')
                    ->where($where)
                    ->whereTime('create_time', 'today')
                    ->count();


                if (($count+$clue_count) > $sys_config['thread_receive_limit'] )
                {
                    $can_num = $sys_config['thread_receive_limit'] - $count;
                    if ($can_num < 0)
                    {
                        $can_num = 0;
                    }
                    $this->ajaxReturn(500, '当天领取限制【'.$sys_config['thread_receive_limit'].'】个，你已领取【'.$count.'】个，还可领取【'.$can_num.'】个！', []);
                }
            }
            if (isset($sys_config['thread_forbidden_sale'])) // 禁止领取期限(销售)
            {
                foreach($clue_id as $v)
                {
                    $where = [
                        'a.clue_id' => $v,
                        'a.admin_id' => $this->admininfo->id,
                        'a.operation_type' => 2,
                        'a.operator' => 2,
                        'a.utype'=>0
                    ];
                    $CrmClueRelease = model('b2bcrm.CrmClueRelease')
                        ->alias('a')
                        ->join('crm_clue b','a.clue_id=b.id','left')
                        ->where($where)
                        ->order('a.create_time','DESC')
                        ->field('a.create_time,b.name')
                        ->find();
                    if (!empty($CrmClueRelease))
                    {
                        if ($sys_config['thread_forbidden_sale'] == 0)
                        {
                            $this->ajaxReturn(500, '主动放弃线索不允许领取', []);
                        }
                        $CrmClueRelease = $CrmClueRelease->toArray();
                        $thread_forbidden_sale = $sys_config['thread_forbidden_sale'] * 86400;

                        $timediff = strtotime($CrmClueRelease['create_time']) + $thread_forbidden_sale;

                        if (time() <= $timediff)
                        {
                            $this->ajaxReturn(500, '【'.$CrmClueRelease['name'].'】线索，释放后'.$sys_config['thread_forbidden_sale'].'天内不能再领取该客户', []);
                        }
                    }
                }
            }
            if (isset($sys_config['thread_forbidden_sys'])) // 禁止领取期限(系统)
            {
                foreach ($clue_id as $v)
                {
                    $where = [
                        'clue_id' => $v,
                        'admin_id' => $this->admininfo->id,
                        'operation_type' => 2,
                        'operator' => 1,
                        'utype'=>0
                    ];
                    $admin_time = model('b2bcrm.CrmClueRelease')
                        ->where($where)
                        ->order('create_time','DESC')
                        ->limit(1)
                        ->value('create_time');
                    if (!empty($admin_time))
                    {
                        if ($sys_config['thread_forbidden_sys'] == 0)
                        {
                            $this->ajaxReturn(500, '系统放弃线索不允许领取', []);
                        }
                        $CrmClueRelease = $CrmClueRelease->toArray();
                        $thread_forbidden_sale = $sys_config['thread_forbidden_sys'] * 86400;

                        $timediff = strtotime($CrmClueRelease['create_time']) + $thread_forbidden_sale;

                        if (time() <= $timediff)
                        {
                            $this->ajaxReturn(500, '系统自动释放后'.$sys_config['thread_forbidden_sys'].'天内不能再领取该客户', []);
                        }
                    }
                }
            }
        Db::startTrans();
            $receive = model('b2bcrm.CrmClueRelease')->releaseAdd($clue_id,$this->admininfo->id,1,1,0);
            if ($receive === false)
            {
                $this->ajaxReturn(500, '领取失败', []);
            }
            model('b2bcrm.CrmClue')
                ->isUpdate('true')
                ->save(['admin_id'=>$this->admininfo->id,'collection_time'=>time()],['id'=>['in',$clue_id]]);
            Db::commit();
            $this->ajaxReturn(200, '领取成功', []);
        }catch (\Exception $e)
        {
            Db::rollback();
            $this->ajaxReturn(500, $e->getMessage(), []);
        }
    }


    /*
     * 线索添加
     * */
    public function clueAdd(){
        $district = input('post.district/a',[]);
        $district_count = count($district);
        $input_data = [
            'name' => input('post.name/', '', 'trim'),  // 线索名称
            'mobile' => input('post.mobile/d','','trim'),  // 联系电话
            'contacts' => input('post.contacts/s','','trim'),  // 联系人
            'weixin' => input('post.weixin/s','','trim'),  // 微信
            'district1' => !empty($district[0]) ? intval($district[0]) : 0, // 省
            'district2' => !empty($district[1]) ? intval($district[1]) : 0, // 市
            'district3' => !empty($district[2]) ? intval($district[2]) : 0, // 区
            'district' => $district_count-1,
            'address' => input('post.address/s','','trim'), // 详细地址
            'creat_id' => $this->admininfo->id,
            'remark' => input('post.remark/s','','trim'),
            'trade' => input('post.trade/d',0,'intval'),
            'scale' => input('post.scale/d',0,'intval')
        ];

        if(!fieldRegex($input_data['mobile'], 'mobile')){
            $this->ajaxReturn(500, '联系电话格式错误');
        }
        $preg_wechat='/^[_a-zA-Z0-9]{5,19}+$/isu';
        if(!empty($input_data['weixin']) &&  !preg_match($preg_wechat,$input_data['weixin'])){
            $this->ajaxReturn(500, '微信号格式错误');
        }
        $sale = input('post.sale/d',0,'');
        if ($sale > 0)
        {
            $input_data['admin_id'] = $this->admininfo->id;
            $input_data['collection_time'] = time(); // 添加领取时间
        }
        try {
            $sys_configs = model('b2bcrm.CrmSysConfig')->getDateByCategory('thread');
            $sys_config = [];
            foreach($sys_configs as $v)
            {
                if ($v['is_open'] == 1)
                {
                    $sys_config[$v['key']] = $v['value'];
                }
            }
            /**
             * 【bug】
             * 线索名称重复验证修改
             * zch 2022.9.19
             */
            if (isset($sys_config['thread_duplicate_name']) && $sys_config['thread_duplicate_name'] == 0)
            {
                $count = model('b2bcrm.CrmClue')->getDataNum(['name'=>$input_data['name']]);
                if ($count > 0)
                {
                    $this->ajaxReturn(500, '线索名称已存在');
                }
            }
            Db::startTrans();
            $add_crmclue = model('b2bcrm.CrmClue')
                ->allowField(true)
                ->validate('CrmClue.add')
                ->isUpdate(false)->save($input_data);
            if (false === $add_crmclue)
            {
                 throw new \Exception(model('b2bcrm.CrmClue')->getError());
            }
            // 日志
            $log_result = model('AdminLog')->record(
                '添加CRM线索【ID:' . model('b2bcrm.CrmClue')->id .'】,线索名称【'.$input_data['name'].'】',
                $this->admininfo
            );
            if (false === $log_result) {
                throw new \Exception(model('AdminLog')->getError());
            }
            Db::commit();
            $this->ajaxReturn(200, '添加成功');
        }catch (\Exception $e)
        {
            Db::rollback();
            $this->ajaxReturn(500, $e->getMessage());
        }

    }

    /*
     * 线索编辑
     * */
    public function clueEdit()
    {
        $clue_id = input('post.clue_id/d',0,'intval');
        if ($clue_id <= 0)
        {
            $this->ajaxReturn(500, '线索id错误', []);
        }

        $crm_clue = model('b2bcrm.CrmClue')->getDataNum(['id'=>$clue_id]);
        if ($crm_clue <= 0)
        {
            $this->ajaxReturn(500, '线索id错误', []);
        }
        $input = input('post.',[]);
        try {
            /**
             * 【bug】
             * 线索名称重复验证修改
             * zch 2022.9.19
             */
            $sys_configs = model('b2bcrm.CrmSysConfig')->where(['key'=>'thread_duplicate_name','category'=>'thread'])->value('value');
            if ($sys_configs == 0)
            {
                $clue_find = model('b2bcrm.CrmClue')->where(['name'=>$input['name']])->find();
                if (!empty($clue_find) && $clue_find['id'] != $clue_id)
                {
                    $this->ajaxReturn(500, '线索名称已存在');
                }
            }
            if(!fieldRegex($input['mobile'], 'mobile')){
                $this->ajaxReturn(500, '联系电话格式错误');
            }
            $preg_wechat='/^[_a-zA-Z0-9]{5,19}+$/isu';
            if(!empty($input['weixin']) && !preg_match($preg_wechat,$input['weixin'])){
                $this->ajaxReturn(500, '微信号格式错误');
            }
            Db::startTrans();
                $edit = model('b2bcrm.CrmClue')->allowField(true)
                    ->validate('CrmClue.edit')
                    ->isUpdate(true)->save($input,['id'=>$clue_id]);

                if (false === $edit)
                {
                    throw new \Exception(model('b2bcrm.CrmClue')->getError());
                }
                // 日志
                $log_result = model('AdminLog')->record(
                    '修改CRM线索【ID:' . $clue_id . '】',
                    $this->admininfo
                );
                if (false === $log_result) {
                    throw new \Exception(model('AdminLog')->getError());
                }
            Db::commit();
            $this->ajaxReturn(200, '修改成功', []);
        }catch (\Exception $e)
        {
            Db::rollback();
            $this->ajaxReturn(500, $e->getMessage());
        }
    }

    /*
     * 列表导出
     * */
    public function export(){
        $list_type = input('post.list_type/d', 0, 'intval');
        $clue_id = input('post.clue_id/a',[]);
        $this->checkExportAccess();
        if (!is_array($clue_id) || empty($clue_id))
        {
            $this->ajaxReturn(500, '请选择要导出的线索', []);
        }
        $where['a.id'] = ['in',$clue_id];
        switch ($list_type) {
            case 1: // 线索公海
                $where['a.admin_id'] = 0;
                break;
            case 2: // 我的线索
                $where['a.admin_id'] = $this->admininfo->id;
                break;
            default: // 全部线索
                break;
        }

        $field = 'a.id,a.name,a.admin_id,a.mobile,a.contacts,a.weixin,a.district1,a.district2,a.district3,a.address,a.updatetime,a.createtime,a.creat_id,a.last_visit_time,a.remark,a.trade';
        $list = model('b2bcrm.CrmClue')->getList($where,['updatetime DESC'],1,'all',$field);
        $category_data = model('Category')->getCache('QS_trade');
        $category_district_data = model('CategoryDistrict')->getCache();
        $cluelist = [];
        if (empty($list))
        {
            $this->ajaxReturn(200, '获取数据成功', []);
        }
        $adminlist = $this->adminlist();
        foreach($list['rows'] as $v)
        {
            $v['admin_username'] = isset($adminlist[$v['admin_id']]) ? $adminlist[$v['admin_id']] : '';
            $v['creator_username'] = isset($adminlist[$v['creat_id']]) ? $adminlist[$v['creat_id']] : '';
            $v['trade'] = isset($category_data[$v['trade']]) ? $category_data[$v['trade']] : '';
            $v['district1'] = isset($category_district_data[$v['district1']]) ? $category_district_data[$v['district1']] : '';
            $v['district2'] = isset($category_district_data[$v['district2']]) ? $category_district_data[$v['district2']] : '';
            $v['district3'] = isset($category_district_data[$v['district3']]) ? $category_district_data[$v['district3']] : '';
            if ($v['last_visit_time'] > 0)
            {
                $v['not_following_day'] = intval((time() - $v['last_visit_time'])/86400);
            }else
            {
                $v['not_following_day'] = '';
            }
            unset($v['admin_id'],$v['last_visit_time']);
            $cluelist[] = $v;
        }
        $return['items'] = $cluelist;
        $this->ajaxReturn(200, '获取数据成功', $return);
    }

    /*
     * 线索删除
     * */
    public function delete()
    {
        $clue_id = input('get.clue_id/a', []);
        $clue_count = model('b2bcrm.CrmClue')->getDataNum(['id' => ['in', $clue_id]]);
        if ($clue_count <= 0) {
            $this->ajaxReturn(500, '线索id错误');
        }
        try {
            Db::startTrans();
                $clue_del = model('b2bcrm.CrmClue')->clueDel($clue_id);
                if ($clue_del === false)
                {
                    $this->ajaxReturn(500, model('b2bcrm.CrmClue')->getError());
                }
                // 日志
                $log_result = model('AdminLog')->record(
                    '删除CRM线索【ID:' . implode(',',$clue_id) . '】,线索名称【'.$clue_del.'】',
                    $this->admininfo
                );
                if (false === $log_result) {
                    throw new \Exception(model('AdminLog')->getError());
                }
            Db::commit();
            $this->ajaxReturn(200, '删除成功');
        }catch (\Exception $e)
        {
            Db::rollback();
            $this->ajaxReturn(500, $e->getMessage());
        }
    }

    public function adminlist()
    {
        return model('Admin')->column('id,username','id');
    }

    public function adminlists()
    {
        $data =  $this->adminlist();
        $arr = [];
        foreach($data as $k=>$v)
        {
            $arr[] = [
                'id' => $k,
                'name' => $v
            ];
        }
        $this->ajaxReturn(200, '获取数据成功',$arr);
    }

    /**
     * 查看线索名称是否重复
     * zch
     * 2022.9.19
     */
    public function isNameRepeat()
    {
        $name = input('post.name/s','','trim');
        $id = input('post.id/d',0,'intval');
        $return['sys_configs'] = model('b2bcrm.CrmSysConfig')
            ->where([
                'key'=>'thread_duplicate_name',
                'category'=>'thread'
            ])
            ->value('value');
        $return['clue_count'] = model('b2bcrm.CrmClue')
            ->where('name',$name)
            ->where('id','<>',$id)
            ->count();
        $this->ajaxReturn(200, '获取数据成功',$return);
    }
}